const express=require("express"),path=require("path"),Router=require("./Router"),utils=require("./utils"),BASE_DIR=__dirname+"/../../../../";class APIRouter{constructor(e){this.site_id=e.site_id,this.api_key=e.api_key,this.env=e.env||"dev",this.tmp=e.tmp||"/tmp",this.turbo=require("turbo360")({site_id:e.site_id}),this.checkCollectionDB=this.checkCollectionDB.bind(this),this.createRouter=this.createRouter.bind(this),this.populateRouter=this.populateRouter.bind(this),this.local=this.local.bind(this),this.prod=this.prod.bind(this)}checkCollectionDB(e){const t=path.join(BASE_DIR,this.tmp),s="dev"==this.env?t+"/"+e+".db":this.tmp+"/"+e+".db";return new Promise((t,o)=>{this.turbo.checkCollectionFile(e,s).then(t=>t.found?null:this.turbo.loadCollection(e,s,this.api_key)).then(e=>{t(e)}).catch(e=>{o(e)})})}createRouter(e){return"dev"==e?new express.Router:new Router}populateRouter(e,t,s){e.get("/",(e,s)=>{const o=[];Object.keys(t).forEach(e=>{const s=new(0,t[e]);o.push({name:e,collectionName:s.collectionName(),schema:s.schema()})}),s.json({confirmation:"success",data:o})}),e.post("/",(e,t)=>{const s=e.body.task;if(null!=s){if("resetpage"==s){const s=e.body.page;if(null==s)return void t.json({confirmation:"fail",message:"Missing page parameter"});const o=e.body.appslug;return null==o?void t.json({confirmation:"fail",message:"Missing appslug parameter"}):void utils.resetPage(s,o).then(e=>{t.json({confirmation:"success",data:e})}).catch(e=>{t.json({confirmation:"fail",message:e.message})})}t.json({confirmation:"fail",message:"Invalid task: "+s})}else t.json({confirmation:"fail",message:"Missing task parameter"})}),e.get("/:resource",(e,s)=>{const o=t[e.params.resource];if(null==o)return void s.json({confirmation:"fail",message:"Invalid resource"});const i=new o;this.checkCollectionDB(i.collectionName()).then(t=>i.get(e.query)).then(e=>{s.json({confirmation:"success",data:e})}).catch(e=>{s.json({confirmation:"fail",message:e.message})})}),e.get("/:resource/:id",(e,s)=>{const o=t[e.params.resource];if(null==o)return void s.json({confirmation:"fail",message:"Invalid resource"});const i=new o;this.checkCollectionDB(i.collectionName()).then(t=>i.getById(e.params.id)).then(e=>{s.json({confirmation:"success",data:e})}).catch(e=>{s.json({confirmation:"fail",message:e.message})})}),e.post("/:resource",(e,s)=>{const o=t[e.params.resource];if(null==o)return void s.json({confirmation:"fail",message:"Invalid resource"});const i=new o;this.checkCollectionDB(i.collectionName()).then(t=>i.post(e.body)).then(e=>{s.json({confirmation:"success",data:e})}).catch(e=>{s.json({confirmation:"fail",message:e.message})})}),e.put("/:resource/:id",(e,s)=>{const o=t[e.params.resource];if(null==o)return void s.json({confirmation:"fail",message:"Invalid resource"});const i=new o;this.checkCollectionDB(i.collectionName()).then(t=>{const s=e.body;return delete s.timestamp,i.put(e.params.id,s)}).then(e=>{s.json({confirmation:"success",data:e})}).catch(e=>{s.json({confirmation:"fail",message:e.message})})}),e.delete("/:resource/:id",(e,s)=>{const o=t[e.params.resource];if(null==o)return void s.json({confirmation:"fail",message:"Invalid resource"});const i=new o;this.checkCollectionDB(i.collectionName()).then(t=>{const s=e.params.id;return i.delete(s,null)}).then(()=>{s.json({confirmation:"success",data:{id:e.params.id}})}).catch(e=>{s.json({confirmation:"fail",message:e.message})})})}local(e){const t=this.createRouter("dev");return this.populateRouter(t,e),t}prod(e){const t=this.createRouter("prod");return this.populateRouter(t,e),t}router(e){const t=this.createRouter(this.env);return this.populateRouter(t,e),t}}module.exports=APIRouter;